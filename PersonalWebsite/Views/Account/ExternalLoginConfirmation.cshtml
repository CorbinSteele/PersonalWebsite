@using Microsoft.Owin.Security
@model PersonalWebsite.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
    ViewBag.ReturnUrl = @Url.Action("ManageLogins", "Manage");
}
@Html.HiddenFor(m => m.ReturnUrl)
<h2>@ViewBag.Title.</h2>
<h3>Another user with the email @Model.Email already exists. If this is you, then login with that account below.</h3>
<h3>If you are certain that you do not have an account here, then you will need to confirm a different email below to finish creating your account.</h3>

@if (Model.ExistingLogins != null)
{
    Html.RenderPartial("_ExternalLoginPartial", Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes()
      .Where(auth => Model.ExistingLogins.Any(el => auth.AuthenticationType == el.LoginProvider)));
}

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>Registration Form</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p class="text-info">
        You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>,
        but to register a new account you must use an email different from @Model.Email
        as this email address is already associated with a different account.
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
